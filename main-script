-- Загрузка Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local scrVer = "0.4.4"

-- Создание окна
local Window = Rayfield:CreateWindow({
    Name = "Dead Rails Script",
    LoadingTitle = "Script Loading",
    LoadingSubtitle = "By Sanya",
    ConfigurationSaving = {
        Enabled = false,
        FolderName = "UltraAimbot",
        FileName = "Config.json"
    },
    KeySystem = true,
    KeySettings = {
      Title = "Dead Rails Script",
      Subtitle = "Enter Key To Get Access Of The Script",
      Note = "Ask Me For Key",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"q4F5YqeL"},
   },
})
 
-- Табы
local AimbotTab = Window:CreateTab("Aimbot", 4483362458)
local FullbrightTab = Window:CreateTab("Fullbright", 4483362458)
local UtilityTab = Window:CreateTab("Utility", 4483362458)
 
-- Настройки
local Settings = {
    Enabled = true,
    AutoAim = true, -- Новая настройка для автоматического прицеливания
    AimFOV = 120,
    MaxDistance = 500,
    Smoothing = 0.5,
    PriorityPart = "Head",
    Use3DDistance = true,
    IgnorePlayers = true, -- По умолчанию игнорируем игроков
    TeamCheck = false,
    WallCheck = false,
    AutoShoot = false,
    ShowFOV = true,
    FOVVisible = true,
    FOVFilled = false,
    fullbright = false,
    FOVThickness = 2,
    FOVColor = Color3.fromRGB(255, 0, 0),
    AimKey = Enum.KeyCode.E,
    ShootKey = Enum.KeyCode.F,
    RefreshRate = 0.1, -- Увеличена частота обновления
    Noclip = false,
}
 
-- Сервисы
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")
local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
local MyCharacter = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
 
-- Переменные
local Aiming = false
local Shooting = false
local LockedTarget = nil
local MousePos = Vector2.new()
local LastMousePos = Vector2.new()
local FOV_Circle
local NPCList = {}
 
-- Инициализация FOV круга
local function InitializeFOV()
    if FOV_Circle then FOV_Circle:Remove() end
    FOV_Circle = Drawing.new("Circle")
    FOV_Circle.Transparency = 1
    FOV_Circle.Color = Settings.FOVColor
    FOV_Circle.Thickness = Settings.FOVThickness
    FOV_Circle.Filled = Settings.FOVFilled
    FOV_Circle.Visible = Settings.ShowFOV and Settings.FOVVisible
    FOV_Circle.Radius = Settings.AimFOV
end
 
local function enableFullbright()
    Lighting.Ambient = Color3.new(1, 1, 1)
    Lighting.Brightness = 2
    Lighting.GlobalShadows = false
    Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
    for _, v in pairs(Lighting:GetChildren()) do
        if v:IsA("Atmosphere") then
            v:Destroy()
        end
    end
end
 
-- UI элементы
AimbotTab:CreateSection("Main")
AimbotTab:CreateToggle({Name = "Enable Aimbot", CurrentValue = Settings.Enabled, Callback = function(v) 
    Settings.Enabled = v 
    if not v then 
        Aiming = false
        LockedTarget = nil
    end
end})

AimbotTab:CreateToggle({Name = "Auto Aim NPC", CurrentValue = Settings.AutoAim, Callback = function(v) 
    Settings.AutoAim = v 
    if not v then 
        Aiming = false
        LockedTarget = nil
    end
end})

AimbotTab:CreateToggle({Name = "Auto Shoot", CurrentValue = Settings.AutoShoot, Callback = function(v) Settings.AutoShoot = v end})
 
AimbotTab:CreateSection("Targeting")
AimbotTab:CreateSlider({Name = "Aim FOV", Range = {50, 500}, Increment = 5, CurrentValue = Settings.AimFOV, Callback = function(v) 
    Settings.AimFOV = v 
    if FOV_Circle then
        FOV_Circle.Radius = v
    end
end})

AimbotTab:CreateSlider({Name = "Max Distance", Range = {100, 2000}, Increment = 50, CurrentValue = Settings.MaxDistance, Callback = function(v) Settings.MaxDistance = v end})
AimbotTab:CreateDropdown({Name = "Priority Part", Options = {"Head", "HumanoidRootPart", "UpperTorso"}, CurrentOption = Settings.PriorityPart, Callback = function(v) Settings.PriorityPart = v end})
AimbotTab:CreateSlider({Name = "Smoothing", Range = {0.1, 1}, Increment = 0.05, CurrentValue = Settings.Smoothing, Callback = function(v) Settings.Smoothing = v end})
AimbotTab:CreateToggle({Name = "Ignore Players", CurrentValue = Settings.IgnorePlayers, Callback = function(v) Settings.IgnorePlayers = v end})
 
AimbotTab:CreateSection("FOV Circle")
AimbotTab:CreateToggle({Name = "Show FOV", CurrentValue = Settings.ShowFOV, Callback = function(v) 
    Settings.ShowFOV = v 
    if FOV_Circle then
        FOV_Circle.Visible = v and Settings.FOVVisible
    end
end})

AimbotTab:CreateToggle({Name = "FOV Filled", CurrentValue = Settings.FOVFilled, Callback = function(v) 
    Settings.FOVFilled = v 
    if FOV_Circle then
        FOV_Circle.Filled = v
    end
end})

AimbotTab:CreateSlider({Name = "FOV Thickness", Range = {1, 10}, Increment = 1, CurrentValue = Settings.FOVThickness, Callback = function(v) 
    Settings.FOVThickness = v 
    if FOV_Circle then
        FOV_Circle.Thickness = v
    end
end})

AimbotTab:CreateColorPicker({Name = "FOV Color", Color = Settings.FOVColor, Callback = function(c) 
    Settings.FOVColor = c 
    if FOV_Circle then
        FOV_Circle.Color = c
    end
end})

FullbrightTab:CreateToggle({
    Name = "Enable Fullbright",
    CurrentValue = false,
    Callback = function(Value)
        Settings.fullbright = Value
    end,
})

UtilityTab:CreateSection("Noclip")
UtilityTab:CreateToggle({
    Name = "Enable Noclip", 
    CurrentValue = Settings.Noclip, 
    Callback = function(v) 
        Settings.Noclip = v 
    end
})

-- Проверка валидности цели
local function IsValidTarget(model)
    if not model:IsA("Model") or model == MyCharacter then return false end

    local hum = model:FindFirstChildOfClass("Humanoid")
    if not hum or hum.Health <= 0 then return false end

    -- Если это игрок и включено игнорирование игроков
    local player = Players:GetPlayerFromCharacter(model)
    if Settings.IgnorePlayers and player then return false end

    return true
end

local function GetTargetPart(model)
    if not model or not model:IsA("Model") then return nil end

    local part = model:FindFirstChild(Settings.PriorityPart)
    if part and part:IsA("BasePart") then return part end

    -- Fallback для NPC
    local head = model:FindFirstChild("Head") or model:FindFirstChild("head")
    if head and head:IsA("BasePart") then return head end

    local torso = model:FindFirstChild("HumanoidRootPart") or 
                 model:FindFirstChild("UpperTorso") or 
                 model:FindFirstChild("Torso")
    if torso and torso:IsA("BasePart") then return torso end

    return nil
end

-- Обновление списка NPC
local function UpdateNPCList()
    NPCList = {}
    for _, model in ipairs(Workspace:GetDescendants()) do
        if model:IsA("Model") and model ~= MyCharacter then
            local hum = model:FindFirstChildOfClass("Humanoid")
            if hum and hum.Health > 0 then
                table.insert(NPCList, model)
            end
        end
    end
end

-- Автоматическое наведение на ближайшего NPC в радиусе FOV
local function AutoAimAtNearestNPC()
    if not Settings.Enabled or not Settings.AutoAim or not MyCharacter then return end
    
    local myPos = MyCharacter:GetPivot().Position
    local bestTarget, closestDist = nil, Settings.AimFOV + 1 -- Добавляем 1 чтобы избежать точного совпадения
    
    -- Проверяем NPC из списка
    for _, model in ipairs(NPCList) do
        if not IsValidTarget(model) then continue end
        
        local part = GetTargetPart(model)
        if not part then continue end
        
        local dist3D = (part.Position - myPos).Magnitude
        if Settings.Use3DDistance and dist3D > Settings.MaxDistance then continue end
        
        local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
        if not onScreen then continue end
        
        local dist2D = (Vector2.new(screenPos.X, screenPos.Y) - MousePos).Magnitude
        if dist2D > Settings.AimFOV then continue end
        
        if dist2D < closestDist then
            closestDist = dist2D
            bestTarget = part
        end
    end
    
    -- Автоматически включаем прицеливание если нашли цель
    if bestTarget then
        LockedTarget = bestTarget
        Aiming = true
    else
        Aiming = false
        LockedTarget = nil
    end
end

-- Периодическое обновление списка NPC
task.spawn(function()
    while true do
        UpdateNPCList()
        task.wait(3) -- Обновляем список каждые 3 секунды для оптимизации
    end
end)

-- Основной цикл прицеливания
RunService.RenderStepped:Connect(function(deltaTime)
    LastMousePos = MousePos
    MousePos = UserInputService:GetMouseLocation()
    
    -- Обновляем позицию FOV круга
    if FOV_Circle then
        FOV_Circle.Position = MousePos
        FOV_Circle.Visible = Settings.ShowFOV and Settings.FOVVisible
    end
    
    -- Автоматическое прицеливание
    if Settings.AutoAim then
        AutoAimAtNearestNPC()
    end
    
    -- Fullbright
    if Settings.fullbright then
        enableFullbright()
    end
    
    -- Noclip
    if Settings.Noclip and MyCharacter then
        for _, part in pairs(MyCharacter:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
    
    -- Прицеливание и плавное движение камеры
    if Settings.Enabled and LockedTarget and LockedTarget.Parent and Aiming then
        local camPos = Camera.CFrame.Position
        local direction = (LockedTarget.Position - camPos).Unit
        local smoothDirection = Camera.CFrame.LookVector:Lerp(direction, Settings.Smoothing)
        
        Camera.CFrame = CFrame.lookAt(camPos, camPos + smoothDirection)
        
        -- Автоматическая стрельба
        if Settings.AutoShoot and Shooting then
            mouse1press()
            task.wait(0.03)
            mouse1release()
        end
    end
end)

-- Обработка клавиш
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    -- Ручное включение/выключение прицеливания
    if input.KeyCode == Settings.AimKey then
            Aiming = not Aiming
            if not Aiming then
                LockedTarget = nil
            end
            Rayfield:Notify({
                Title = "Aimbot",
                Content = Aiming and "Aim Enabled" or "Aim Disabled",
                Duration = 2,
                Image = 4483362458
            })
    end
    
    -- Включение/выключение авто-стрельбы
    if input.KeyCode == Settings.ShootKey then
        Shooting = not Shooting
        Rayfield:Notify({
            Title = "AutoShoot",
            Content = Shooting and "Enabled" or "Disabled",
            Duration = 2,
            Image = 4483362458
        })
    end
end)

-- Инициализация
InitializeFOV()
UpdateNPCList()

-- Уведомление
Rayfield:Notify({
    Title = "Auto NPC Aimbot Loaded",
    Content = "Version: " .. scrVer .. "\nAuto Aim: " .. tostring(Settings.AutoAim),
    Duration = 5,
    Image = 4483362458
})
